{"id":"node_modules/@giphy/js-util/dist/get-pingback-id.js","dependencies":[{"name":"D:\\testhub\\node_modules\\@giphy\\js-util\\dist\\get-pingback-id.js.map","includedInParent":true,"mtime":499162500000},{"name":"D:\\testhub\\node_modules\\@giphy\\js-util\\src\\get-pingback-id.ts","includedInParent":true,"mtime":499162500000},{"name":"D:\\testhub\\package.json","includedInParent":true,"mtime":1633782651602},{"name":"D:\\testhub\\node_modules\\@giphy\\js-util\\package.json","includedInParent":true,"mtime":1633781127467},{"name":"uuid","loc":{"line":3,"column":21},"parent":"D:\\testhub\\node_modules\\@giphy\\js-util\\dist\\get-pingback-id.js","resolved":"D:\\testhub\\node_modules\\uuid\\dist\\esm-browser\\index.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar uuid_1 = require(\"uuid\");\nvar pingbackId = '';\nvar idLength = 16;\n/* istanbul ignore next */\nvar noUUIDRandom = function () {\n    var result = '';\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for (var i = 0; i < idLength; i++) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n};\nvar getPingbackId = function () {\n    // it exists in memory\n    if (!pingbackId) {\n        try {\n            // it exists in storage\n            pingbackId = sessionStorage.getItem('giphyPingbackId');\n        }\n        catch (_) { }\n        if (!pingbackId) {\n            // we need to create it\n            var hexTime = new Date().getTime().toString(16); // was told to mimic what we had\n            try {\n                // React Native doesn't support uuid without a polyfill\n                pingbackId = (\"\" + hexTime + uuid_1.v4().replace(/-/g, '')).substring(0, idLength); // 16 character max\n            }\n            catch (error) {\n                /* istanbul ignore next */\n                pingbackId = noUUIDRandom();\n            }\n            try {\n                // save in storage\n                sessionStorage.setItem('giphyPingbackId', pingbackId);\n            }\n            catch (_) { }\n        }\n    }\n    return pingbackId;\n};\nexports.default = getPingbackId;\n"},"sourceMaps":{"js":{"version":3,"file":"get-pingback-id.js","sourceRoot":"","sources":["../src/get-pingback-id.ts"],"names":[],"mappings":";;AAAA,6BAAiC;AACjC,IAAI,UAAU,GAAG,EAAE,CAAA;AAEnB,IAAM,QAAQ,GAAG,EAAE,CAAA;AAEnB,0BAA0B;AAC1B,IAAM,YAAY,GAAG;IACjB,IAAI,MAAM,GAAG,EAAE,CAAA;IACf,IAAM,UAAU,GAAG,gEAAgE,CAAA;IACnF,IAAM,gBAAgB,GAAG,UAAU,CAAC,MAAM,CAAA;IAC1C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,EAAE;QAC/B,MAAM,IAAI,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,gBAAgB,CAAC,CAAC,CAAA;KAC5E;IACD,OAAO,MAAM,CAAA;AACjB,CAAC,CAAA;AACD,IAAM,aAAa,GAAG;IAClB,sBAAsB;IACtB,IAAI,CAAC,UAAU,EAAE;QACb,IAAI;YACA,uBAAuB;YACvB,UAAU,GAAG,cAAc,CAAC,OAAO,CAAC,iBAAiB,CAAW,CAAA;SACnE;QAAC,OAAO,CAAC,EAAE,GAAE;QACd,IAAI,CAAC,UAAU,EAAE;YACb,uBAAuB;YACvB,IAAM,OAAO,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAA,CAAC,gCAAgC;YAClF,IAAI;gBACA,uDAAuD;gBACvD,UAAU,GAAG,CAAA,KAAG,OAAO,GAAG,SAAI,EAAE,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAG,CAAA,CAAC,SAAS,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAA,CAAC,mBAAmB;aAClG;YAAC,OAAO,KAAK,EAAE;gBACZ,0BAA0B;gBAC1B,UAAU,GAAG,YAAY,EAAE,CAAA;aAC9B;YACD,IAAI;gBACA,kBAAkB;gBAClB,cAAc,CAAC,OAAO,CAAC,iBAAiB,EAAE,UAAU,CAAC,CAAA;aACxD;YAAC,OAAO,CAAC,EAAE,GAAE;SACjB;KACJ;IACD,OAAO,UAAU,CAAA;AACrB,CAAC,CAAA;AAED,kBAAe,aAAa,CAAA","sourcesContent":["import { v4 as uuid } from 'uuid'\nlet pingbackId = ''\n\nconst idLength = 16\n\n/* istanbul ignore next */\nconst noUUIDRandom = () => {\n    let result = ''\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n    const charactersLength = characters.length\n    for (let i = 0; i < idLength; i++) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength))\n    }\n    return result\n}\nconst getPingbackId = () => {\n    // it exists in memory\n    if (!pingbackId) {\n        try {\n            // it exists in storage\n            pingbackId = sessionStorage.getItem('giphyPingbackId') as string\n        } catch (_) {}\n        if (!pingbackId) {\n            // we need to create it\n            const hexTime = new Date().getTime().toString(16) // was told to mimic what we had\n            try {\n                // React Native doesn't support uuid without a polyfill\n                pingbackId = `${hexTime}${uuid().replace(/-/g, '')}`.substring(0, idLength) // 16 character max\n            } catch (error) {\n                /* istanbul ignore next */\n                pingbackId = noUUIDRandom()\n            }\n            try {\n                // save in storage\n                sessionStorage.setItem('giphyPingbackId', pingbackId)\n            } catch (_) {}\n        }\n    }\n    return pingbackId\n}\n\nexport default getPingbackId\n"]}},"error":null,"hash":"9d86fee71a7386a43e2f38e2600ce566","cacheData":{"env":{}}}