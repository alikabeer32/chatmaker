{"id":"node_modules/@giphy/js-util/dist/collections.js","dependencies":[{"name":"D:\\testhub\\node_modules\\@giphy\\js-util\\dist\\collections.js.map","includedInParent":true,"mtime":499162500000},{"name":"D:\\testhub\\node_modules\\@giphy\\js-util\\src\\collections.ts","includedInParent":true,"mtime":499162500000},{"name":"D:\\testhub\\package.json","includedInParent":true,"mtime":1633782651602},{"name":"D:\\testhub\\node_modules\\@giphy\\js-util\\package.json","includedInParent":true,"mtime":1633781127467}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.pick = exports.without = exports.take = exports.forEach = exports.mapValues = void 0;\nfunction mapValues(object, mapFn) {\n    if (Array.isArray(object)) {\n        throw \"This map is just for objects, just use array.map for arrays\";\n    }\n    return Object.keys(object).reduce(function (result, key) {\n        result[key] = mapFn(object[key], key);\n        return result;\n    }, {});\n}\nexports.mapValues = mapValues;\nfunction forEach(object, mapFn) {\n    if (Array.isArray(object)) {\n        throw \"This map is just for objects, just use array.forEach for arrays\";\n    }\n    return Object.keys(object).forEach(function (key) {\n        mapFn(object[key], key);\n    });\n}\nexports.forEach = forEach;\nfunction take(arr, count) {\n    if (count === void 0) { count = 0; }\n    return arr.slice(0, count);\n}\nexports.take = take;\nfunction without(arr, values) {\n    return arr.filter(function (val) { return values.indexOf(val) === -1; });\n}\nexports.without = without;\nfunction pick(object, pick) {\n    var res = {};\n    pick.forEach(function (key) {\n        if (object[key] !== undefined) {\n            res[key] = object[key];\n        }\n    });\n    return res;\n}\nexports.pick = pick;\n"},"sourceMaps":{"js":{"version":3,"file":"collections.js","sourceRoot":"","sources":["../src/collections.ts"],"names":[],"mappings":";;;AAAA,SAAgB,SAAS,CAAC,MAAW,EAAE,KAAqC;IACxE,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;QACvB,MAAM,6DAA6D,CAAA;KACtE;IACD,OAAO,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,UAAC,MAAW,EAAE,GAAW;QACvD,MAAM,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAA;QACrC,OAAO,MAAM,CAAA;IACjB,CAAC,EAAE,EAAE,CAAC,CAAA;AACV,CAAC;AARD,8BAQC;AAED,SAAgB,OAAO,CAAC,MAAW,EAAE,KAAmC;IACpE,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;QACvB,MAAM,iEAAiE,CAAA;KAC1E;IACD,OAAO,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,UAAC,GAAW;QAC3C,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,CAAA;IAC3B,CAAC,CAAC,CAAA;AACN,CAAC;AAPD,0BAOC;AAED,SAAgB,IAAI,CAAI,GAAQ,EAAE,KAAS;IAAT,sBAAA,EAAA,SAAS;IACvC,OAAO,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAA;AAC9B,CAAC;AAFD,oBAEC;AAED,SAAgB,OAAO,CAAI,GAAQ,EAAE,MAAW;IAC5C,OAAO,GAAG,CAAC,MAAM,CAAC,UAAA,GAAG,IAAI,OAAA,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAA1B,CAA0B,CAAC,CAAA;AACxD,CAAC;AAFD,0BAEC;AAED,SAAgB,IAAI,CAAsC,MAAS,EAAE,IAAc;IAC/E,IAAM,GAAG,GAAe,EAAE,CAAA;IAC1B,IAAI,CAAC,OAAO,CAAC,UAAC,GAAM;QAChB,IAAI,MAAM,CAAC,GAAG,CAAC,KAAK,SAAS,EAAE;YAC3B,GAAG,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAA;SACzB;IACL,CAAC,CAAC,CAAA;IACF,OAAO,GAAiB,CAAA;AAC5B,CAAC;AARD,oBAQC","sourcesContent":["export function mapValues(object: any, mapFn: (val: any, key: string) => any): any {\n    if (Array.isArray(object)) {\n        throw `This map is just for objects, just use array.map for arrays`\n    }\n    return Object.keys(object).reduce((result: any, key: string) => {\n        result[key] = mapFn(object[key], key)\n        return result\n    }, {})\n}\n\nexport function forEach(object: any, mapFn: (val: any, key: any) => void): void {\n    if (Array.isArray(object)) {\n        throw `This map is just for objects, just use array.forEach for arrays`\n    }\n    return Object.keys(object).forEach((key: string) => {\n        mapFn(object[key], key)\n    })\n}\n\nexport function take<T>(arr: T[], count = 0): T[] {\n    return arr.slice(0, count)\n}\n\nexport function without<T>(arr: T[], values: T[]): T[] {\n    return arr.filter(val => values.indexOf(val) === -1)\n}\n\nexport function pick<T extends object, U extends keyof T>(object: T, pick: Array<U>): Pick<T, U> {\n    const res: Partial<T> = {}\n    pick.forEach((key: U) => {\n        if (object[key] !== undefined) {\n            res[key] = object[key]\n        }\n    })\n    return res as Pick<T, U>\n}\n"]}},"error":null,"hash":"4f74cfcc2e60c5d590fab6189fc995d0","cacheData":{"env":{}}}